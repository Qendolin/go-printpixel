// "".lerpIptr STEXT nosplit size=44 args=0x20 locals=0x0 funcid=0x0
// 	0x0000 00000 (./lerp.go:3)	TEXT	"".lerpIptr(SB), NOSPLIT|ABIInternal, $0-32
// 	0x0000 00000 (./lerp.go:3)	FUNCDATA	$0, gclocals┬À33cdeccccebe80329f1fdbee7f5874cb(SB)
// 	0x0000 00000 (./lerp.go:3)	FUNCDATA	$1, gclocals┬À33cdeccccebe80329f1fdbee7f5874cb(SB)
// 	0x0000 00000 (./lerp.go:4)	MOVQ	"".e+16(SP), AX
// 	0x0005 00005 (./lerp.go:4)	MOVQ	"".s+8(SP), CX
// 	0x000a 00010 (./lerp.go:4)	SUBQ	CX, AX
// 	0x000d 00013 (./lerp.go:4)	MOVQ	"".f+24(SP), DX
// 	0x0012 00018 (./lerp.go:4)	IMULQ	AX, DX
// 	0x0016 00022 (./lerp.go:4)	SHRQ	$32, DX
// 	0x001a 00026 (./lerp.go:4)	LEAQ	(CX)(DX*1), AX
// 	0x001e 00030 (./lerp.go:4)	MOVL	$4294967295, CX
// 	0x0023 00035 (./lerp.go:4)	ANDQ	CX, AX
// 	0x0026 00038 (./lerp.go:4)	MOVQ	AX, "".~r3+32(SP)
// 	0x002b 00043 (./lerp.go:4)	RET
// 	0x0000 48 8b 44 24 10 48 8b 4c 24 08 48 29 c8 48 8b 54  H.D$.H.L$.H).H.T
// 	0x0010 24 18 48 0f af d0 48 c1 ea 20 48 8d 04 11 b9 ff  $.H...H.. H.....
// 	0x0020 ff ff ff 48 21 c8 48 89 44 24 20 c3              ...H!.H.D$ .
// go.cuinfo.packagename. SDWARFCUINFO dupok size=0
// 	0x0000 66 69 65 6c 64                                   field
// gclocals┬À33cdeccccebe80329f1fdbee7f5874cb SRODATA dupok size=8
// 	0x0000 01 00 00 00 00 00 00 00                          ........

// i386?
// func lerpIptr(s, e, f uint32) uint32
// 3 in uint32, 1 out uint32 = 4 * 4 bytes = 16
TEXT ·lerpAsm(SB), $0-16
// return (s + (f*(e-s))>>32) & 0xffffffff
MOVL	start+0(FP), AX
MOVL	end+4(FP), CX
MOVL	fac+8(FP), DX
SUBL	AX, CX 				// cx = cx (end) - ax (start)
IMULQ	CX, DX				// dx = cx * dx (fac)
SHRQ	$32, DX				// dx = dx >> 32
ADDL	AX, DX				// ax = ax (start) + dx
MOVL	DX, result+16(FP)
RET
